name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      date: $(date '+%Y%m%d%H%M%S')
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build
        run: |
          mkdir -p output
          export GOOS=darwin  && export GOARCH=amd64 && go build -ldflags="-s -w" -o ./output/snyk-lsp.$GOOS.$GOARCH
          export GOOS=darwin  && export GOARCH=arm64 && go build -ldflags="-s -w" -o ./output/snyk-lsp.$GOOS.$GOARCH
          export GOOS=linux   && export GOARCH=386   && go build -ldflags="-s -w" -o ./output/snyk-lsp.$GOOS.$GOARCH
          export GOOS=linux   && export GOARCH=amd64 && go build -ldflags="-s -w" -o ./output/snyk-lsp.$GOOS.$GOARCH
          export GOOS=linux   && export GOARCH=arm   && go build -ldflags="-s -w" -o ./output/snyk-lsp.$GOOS.$GOARCH
          export GOOS=linux   && export GOARCH=arm64 && go build -ldflags="-s -w" -o ./output/snyk-lsp.$GOOS.$GOARCH
          export GOOS=windows && export GOARCH=386   && go build -ldflags="-s -w" -o ./output/snyk-lsp.$GOOS.$GOARCH.exe
          export GOOS=windows && export GOARCH=amd64 && go build -ldflags="-s -w" -o ./output/snyk-lsp.$GOOS.$GOARCH.exe
          chmod +x output/*
      - name: Compress binaries with UPX
        uses: crazy-max/ghaction-upx@v1
        with:
          version: latest
          files: output/*
          args: "-9f"
      - name: Test
        env:
          DEEPROXY_API_URL: ${{secrets.DEEPROXY_API_URL}}
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN }}
        run: |
          echo "Downloading CLI..."
          curl https://static.snyk.io/cli/latest/snyk-linux > snyk
          chmod +x snyk
          export PATH=$PATH:$PWD
          go test -v ./...
      - name: Golang code analysis
        run: |
          go vet
          go fmt
      - name: Staticcheck code analysis
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...
      - name: Snyk
        env:
          DEEPROXY_API_URL: ${{secrets.DEEPROXY_API_URL}}
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN }}
        run: |
          chmod +x snyk
          ./snyk test
          ./snyk code test
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: snyk-lsp-binaries
          path: output/*
          if-no-files-found: error
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "${{ date }}_${{ GITHUB_SHA }}"
          files: |
            output/*